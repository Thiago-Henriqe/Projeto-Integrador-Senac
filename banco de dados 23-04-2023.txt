create table Cliente(
idCliente int identity(1,1) primary key,
nomeCliente varchar(100) not null,
cpfouCPNJCliente char(14) unique,
emailCliente varchar(100) not null,
cidadeCliente varchar(40) not null,
enderecoCliente varchar(50) not null,
enderecoNumeroCliente varchar(5) not null,
enderecoComplementoCliente varchar(5),
telefoneCliente numeric(10),
celularCliente numeric(11) not null,
ativoInativoCliente varchar(7) default 'Ativo',
loginCliente varchar(50) unique not null,
senhaCliente varchar(500) not null
);

create table Funcionario(
idFuncionario int identity(1,1) primary key,
nomeFuncionario varchar(100) not null,
cpfFuncionario char(11) unique,
idadeFuncionario date,
emailFuncionario varchar(100) not null,
cidadeFuncionario varchar(40) not null,
enderecoFuncionario varchar(50) not null,
enderecoNumeroFuncionario varchar(10) not null,
enderecoComplementoFuncionario varchar(10) not null,
telefoneFuncionario numeric(10),
celularFuncionario numeric(11),
loginFuncionario varchar(50) unique not null,
ativoInativoFuncionario varchar(7) default 'Ativo',
senhaFuncionario varchar(500) not null
);

create table Motoboy(
idMotoboy int identity(1,1) primary key,
cnhMotoboy char(11) unique,
nomeMotoboy varchar(100) not null,
idadeMotoboy date not null,
veiculoMotoboy varchar(50) not null,
modeloMotoboy varchar(50) not null,
placaMotoboy char(7) not null,
enderecoMotoboy varchar(50) not null,
enderecoNumeroMotoboy varchar(5) not null,
EnderecoComplementoMotoboy varchar(5) not null,
celularMotoboy numeric(13) not null,
ativoInativoMotoboy varchar(7) default 'Ativo'
);

create table Corrida (
idCorrida int identity(1,1) primary key,
idMotoboy int,
idCliente int not null,
idFuncionario int,
valorCorrida varchar(10),
distanciaCorrida varchar(10),
horarioRetiraCorrida datetime not null,
dataRetiraCorrida date not null,
cidadeRetiradaCorrida varchar(40) not null,
enderecoRetiradaCorrida varchar(50) not null, 
enderecoNumeroRetiradaCorrida varchar(5) not null,
enderecoComplementoRetiradaCorrida varchar(5),
cepRetiraCorrida numeric(8) not null,
horarioEntregaCorrida datetime not null,
dataEntregaCorrida date not null,
cidadeEntregaCorrida varchar(40) not null,
enderecoEntregaCorrida varchar(50) not null, 
enderecoNumeroEntregaCorrida varchar(5) not null,
enderecoComplementoEntregaCorrida varchar(5),
cepEntregaCorrida numeric(8) not null,
statusCorrida varchar(10) default 'Ativa'
constraint fk_idMotoboy foreign key(idMotoboy) references Motoboy (idMotoboy),
constraint fk_idFuncionario foreign key(idFuncionario) references Funcionario (idFuncionario),
constraint fk_idCliente foreign key(idCliente) references Cliente (idCliente)
);


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
PROCEDURES
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx



-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DELETAR FUNCIONARIO

CREATE PROCEDURE pd_Funcionario
(
	@cpfFuncionario char(11)
)
AS
BEGIN
	DELETE FROM Funcionario 
	WHERE cpfFuncionario = @cpfFuncionario
END

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DELETAR MOTOBOY

CREATE PROCEDURE pd_motoboy
(
    @cnhMotoboy char(11)
)
AS
BEGIN
    DELETE FROM Motoboy
    WHERE cnhMotoboy = @cnhMotoboy
END

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DELETAR CLIENTE	

CREATE PROCEDURE pd_Cliente
(
	@cpfouCPNJCliente char(14)
          
)
AS
BEGIN
	DELETE FROM Cliente 
	WHERE cpfouCPNJCliente = @cpfouCPNJCliente
END

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
BUSCA FUNCIONARIO

CREATE PROCEDURE ps_Funcionario
(
	@nomeFuncionario VARCHAR(100) = NULL,
	@cpfFuncionario CHAR(11) = NULL
)
AS
BEGIN	
		SELECT idFuncionario as 'ID', nomeFuncionario as 'Nome', cpfFuncionario as 'CPF', idadeFuncionario as 'Idade', emailFuncionario as 'E-mail', cidadeFuncionario as 'Cidade', enderecoFuncionario as 'Endereço', enderecoNumeroFuncionario as 'Número', enderecoComplementoFuncionario as 'Complemento', telefoneFuncionario as 'Telefone', celularFuncionario as 'Celular', loginFuncionario as 'Login', ativoInativoFuncionario as 'Status' FROM Funcionario WHERE nomeFuncionario LIKE @nomeFuncionario + '%'or cpfFuncionario = @cpfFuncionario
	
END

CREATE PROCEDURE ps_FuncionarioLoad
(	
	@cpfFuncionario CHAR(11) = NULL
)
AS
BEGIN	
		SELECT * FROM Funcionario WHERE cpfFuncionario = @cpfFuncionario
	
END
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

BUSCA CLIENTE


CREATE PROCEDURE ps_Cliente
(
	@nomeCliente  VARCHAR(100) = null,
	@cpfouCPNJCliente CHAR(14) = null
)
AS
BEGIN	
		SELECT idCliente as 'ID', nomeCliente as 'Cliente', cpfouCPNJCliente as 'CPF/CNPJ', emailCliente as 'E-mail', cidadeCliente as 'Cidade', enderecoCliente as 'Endereço', enderecoNumeroCliente as 'Número', enderecoComplementoCliente  as 'Complemento', telefoneCliente as 'Telefone', celularCliente as 'Celular', ativoInativoCliente as 'Status', loginCliente as 'Login' FROM Cliente WHERE nomeCliente LIKE @nomeCliente + '%' or cpfouCPNJCliente = @cpfouCPNJCliente
	
END


CREATE PROCEDURE ps_ClienteLoad
(
	@cpfouCPNJCliente CHAR(14) = null
)
AS
BEGIN	
		SELECT * FROM Cliente WHERE cpfouCPNJCliente = @cpfouCPNJCliente		
END


BUSCA CLIENTE NA CORRIDA

CREATE PROCEDURE ps_ClienteCorrida
(
	@nomeCliente  VARCHAR(100)
)
AS
BEGIN
	IF (@nomeCliente <> '')
	BEGIN
		SELECT idCliente as 'ID', nomeCliente as 'Cliente', cpfouCPNJCliente as 'CPF/CNPJ', emailCliente as 'E-mail', cidadeCliente as 'Cidade', enderecoCliente as 'Endereço', enderecoNumeroCliente as 'Número', enderecoComplementoCliente  as 'Complemento', telefoneCliente as 'Telefone', celularCliente as 'Celular', ativoInativoCliente as 'Status', loginCliente as 'Login' FROM Cliente WHERE nomeCliente LIKE @nomeCliente + '%'
	END
END


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE ps_Motoboy
(
	@nomeMotoboy VARCHAR(100) = NULL,
	@cnhMotoboy CHAR(11) = NULL
)
AS
BEGIN		
		SELECT idMotoboy as 'ID', cnhMotoboy as 'CNH', nomeMotoboy as 'Motoboy', idadeMotoboy as 'Idade', veiculoMotoboy as 'Veículo', modeloMotoboy as 'Modelo', placaMotoboy as 'Placa', enderecoMotoboy as 'Endereço', enderecoNumeroMotoboy  as 'Número', EnderecoComplementoMotoboy as 'Complemento', celularMotoboy as 'Celular', ativoInativoMotoboy as 'Status' FROM Motoboy WHERE nomeMotoboy LIKE @nomeMotoboy + '%' OR cnhMotoboy = @cnhMotoboy
		
END

CREATE PROCEDURE ps_MotoboyLoad
(
	
	@cnhMotoboy CHAR(11) = NULL
)
AS
BEGIN		
		SELECT * FROM Motoboy WHERE  cnhMotoboy = @cnhMotoboy
		
END



CREATE PROCEDURE listarCorrida
(    
    @statusCorrida VARCHAR(10)
)
AS
BEGIN
    select idCorrida as PEDIDO, valorCorrida as VALOR, distanciaCorrida as DISTANCIA, SUBSTRING(CAST(horarioRetiraCorrida AS NVARCHAR(20)), 12, 16) as 'COLETAR Remetente', cidadeRetiradaCorrida as 'CIDADE Remetente', enderecoRetiradaCorrida as 'RUA Remetente', enderecoNumeroEntregaCorrida as 'NUM Remetente', cepRetiraCorrida as 'CEP Remetente', SUBSTRING(CAST(horarioEntregaCorrida AS NVARCHAR(20)), 12, 16) as 'ENTREGAR Destino', cidadeEntregaCorrida as 'CIDADE Destino', enderecoEntregaCorrida as 'RUA Destino', enderecoNumeroEntregaCorrida as 'NUM Destino', cepEntregaCorrida as 'CEP Destino' from Corrida    

 

WHERE statusCorrida = @statusCorrida 
END




CREATE PROCEDURE listarCorridaHTML
(	
	@statusCorrida VARCHAR(10) = 'Ativa',
	@idCliente int

)
AS
BEGIN
	select idCorrida as PEDIDO, valorCorrida as VALOR, distanciaCorrida as DISTANCIA, cidadeRetiradaCorrida as 'CIDADE Remetente', enderecoRetiradaCorrida as 'RUA Remetente', enderecoNumeroEntregaCorrida as 'NUM Remetente', cepRetiraCorrida as 'CEP Remetente', cidadeEntregaCorrida as 'CIDADE Destino', enderecoEntregaCorrida as 'RUA Destino', enderecoNumeroEntregaCorrida as 'NUM Destino', cepEntregaCorrida as 'CEP Destino' from Corrida	

WHERE statusCorrida = @statusCorrida AND idCliente = @idCliente
END


CREATE PROCEDURE listarCorridaEntregue
(	
	@statusCorrida VARCHAR(10) = 'Finalizada',
	@idCliente int

)
AS
BEGIN
	select idCorrida as PEDIDO, valorCorrida as VALOR, distanciaCorrida as DISTANCIA, cidadeRetiradaCorrida as 'CIDADE Remetente', enderecoRetiradaCorrida as 'RUA Remetente', enderecoNumeroEntregaCorrida as 'NUM Remetente', cepRetiraCorrida as 'CEP Remetente', cidadeEntregaCorrida as 'CIDADE Destino', enderecoEntregaCorrida as 'RUA Destino', enderecoNumeroEntregaCorrida as 'NUM Destino', cepEntregaCorrida as 'CEP Destino' from Corrida	

WHERE statusCorrida = @statusCorrida AND idCliente = @idCliente
END

CREATE PROCEDURE ps_CorridaCPFouCNPJ
(	
	@cpfouCPNJCliente CHAR(14)
)
AS

if(@cpfouCPNJCliente = '' )
	 select idCorrida as CorridaAB, valorCorrida as VALOR, distanciaCorrida as DISTANCIA, SUBSTRING(CAST(horarioRetiraCorrida AS NVARCHAR(20)), 12, 16) as 'COLETAR Remetente', cidadeRetiradaCorrida as 'CIDADE Remetente', enderecoRetiradaCorrida as 'RUA Remetente', enderecoNumeroEntregaCorrida as 'NUM Remetente', cepRetiraCorrida as 'CEP Remetente', SUBSTRING(CAST(horarioEntregaCorrida AS NVARCHAR(20)), 12, 16) as 'ENTREGAR Destino', cidadeEntregaCorrida as 'CIDADE Destino', enderecoEntregaCorrida as 'RUA Destino', enderecoNumeroEntregaCorrida as 'NUM Destino', cepEntregaCorrida as 'CEP Destino' from Corrida    

else
  select idCorrida as CorridaAB, valorCorrida as VALOR, distanciaCorrida as DISTANCIA, SUBSTRING(CAST(horarioRetiraCorrida AS NVARCHAR(20)), 12, 16) as 'COLETAR Remetente', cidadeRetiradaCorrida as 'CIDADE Remetente', enderecoRetiradaCorrida as 'RUA Remetente', enderecoNumeroEntregaCorrida as 'NUM Remetente', cepRetiraCorrida as 'CEP Remetente', SUBSTRING(CAST(horarioEntregaCorrida AS NVARCHAR(20)), 12, 16) as 'ENTREGAR Destino', cidadeEntregaCorrida as 'CIDADE Destino', enderecoEntregaCorrida as 'RUA Destino', enderecoNumeroEntregaCorrida as 'NUM Destino', cepEntregaCorrida as 'CEP Destino' from Corrida    

INNER JOIN Cliente on Cliente.idCliente = Corrida.idCliente

WHERE cpfouCPNJCliente Like @cpfouCPNJCliente


CREATE PROCEDURE pf_Corrida
(
@statusCorrida VARCHAR(10)= Finalizada,
@idCorrida int
)
AS
BEGIN
UPDATE Corrida
SET
statusCorrida = @statusCorrida
WHERE idCorrida = @idCorrida
END

CREATE PROCEDURE pc_Corrida
(
@statusCorrida VARCHAR(10)= Cancelada,
@idCorrida int
)
AS
BEGIN
UPDATE Corrida
SET
statusCorrida = @statusCorrida
WHERE idCorrida = @idCorrida
END
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



UPDATE FUNCIONARIO
CREATE PROCEDURE PU_Funcionario
(
@nomeFuncionario varchar(100),
@cpfFuncionario char(11),
@idadeFuncionario date,
@emailFuncionario varchar(100),
@cidadeFuncionario varchar(40),
@enderecoFuncionario varchar(50),
@enderecoNumeroFuncionario varchar(50),
@enderecoComplementoFuncionario varchar(10),
@telefoneFuncionario numeric(10),
@celularFuncionario numeric(11),
@loginFuncionario varchar(50),
@ativoInativoFuncionario varchar(7),
@senhaFuncionario varchar(500)
)
AS
BEGIN
UPDATE Funcionario
SET
nomeFuncionario = @nomeFuncionario,
cpfFuncionario = @cpfFuncionario,
idadeFuncionario = @idadeFuncionario,
emailFuncionario = @emailFuncionario,
cidadeFuncionario = @cidadeFuncionario,
enderecoFuncionario = @enderecoFuncionario,
enderecoNumeroFuncionario = @enderecoNumeroFuncionario,
enderecoComplementoFuncionario = @enderecoComplementoFuncionario,
telefoneFuncionario = @telefoneFuncionario,
celularFuncionario = @celularFuncionario,
loginFuncionario = @loginFuncionario,
ativoInativoFuncionario = @ativoInativoFuncionario,
senhaFuncionario = @senhaFuncionario
WHERE cpfFuncionario = @cpfFuncionario
END


UPDATE CLIENTE

CREATE PROCEDURE PU_Cliente
(
@nomeCliente varchar (100),
@cpfouCPNJCliente char (11),
@emailCliente varchar (100),
@cidadeCliente varchar (40),
@enderecoCliente varchar (50),
@enderecoNumeroCLiente varchar (12),
@enderecoComplementoCliente varchar (20),
@telefoneCliente numeric (10),
@celularCliente numeric (11),
@ativoInativoCliente varchar(7),
@loginCliente varchar(50),
@senhaCliente varchar(500)
)
AS
BEGIN
UPDATE Cliente
SET
nomeCliente = @nomeCliente,
cpfouCPNJCliente = @cpfouCPNJCliente,
emailCliente = @emailCliente,
cidadeCliente = @cidadeCliente,
enderecoCliente = @enderecoCliente,
enderecoNumeroCLiente = @enderecoNumeroCLiente,
enderecoComplementoCliente = @enderecoComplementoCliente,
telefoneCliente= @telefoneCliente,
celularCliente = @celularCliente,
ativoInativoCliente = @ativoInativoCliente,
loginCliente = @loginCliente,
senhaCliente = @senhaCliente
WHERE cpfouCPNJCliente = @cpfouCPNJCliente
END



UPDATE MOTOBOY

CREATE PROCEDURE PU_Motoboy
(
@cnhMotoboy char(11),
@nomeMotoboy varchar(100),
@idadeMotoboy date,
@veiculoMotoboy varchar(50),
@modeloMotoboy varchar(50),
@placaMotoboy char(7),
@enderecoMotoboy varchar(50),
@enderecoNumeroMotoboy varchar(5),
@EnderecoComplementoMotoboy varchar(5),
@celularMotoboy numeric(13),
@ativoInativoMotoboy varchar(7)
)
AS 
BEGIN
UPDATE Motoboy
SET
cnhMotoboy = @cnhMotoboy,
nomeMotoboy = @nomeMotoboy,
idadeMotoboy = @idadeMotoboy,
veiculoMotoboy = @veiculoMotoboy,
modeloMotoboy = @modeloMotoboy,
placaMotoboy = @placaMotoboy,
enderecoMotoboy = @enderecoMotoboy,
enderecoNumeroMotoboy = @enderecoNumeroMotoboy,
EnderecoComplementoMotoboy = @EnderecoComplementoMotoboy,
celularMotoboy = @celularMotoboy,
ativoInativoMotoboy = @ativoInativoMotoboy
WHERE cnhMotoboy = @cnhMotoboy
END


UPDATE CORRIDA

CREATE PROCEDURE pu_CorridaFuncionario
(
@idCorrida int,
@idMotoboy int,
@idFuncionario int,
@valorCorrida varchar(10),
@distanciaCorrida varchar(10),
@horarioRetiraCorrida datetime,
@dataRetiraCorrida date,
@cidadeRetiradaCorrida varchar(40),
@enderecoRetiradaCorrida varchar(50), 
@enderecoNumeroRetiradaCorrida varchar(5),
@enderecoComplementoRetiradaCorrida varchar(5),
@cepRetiraCorrida numeric(8),
@horarioEntregaCorrida datetime,
@dataEntregaCorrida date,
@cidadeEntregaCorrida varchar(40),
@enderecoEntregaCorrida varchar(50), 
@enderecoNumeroEntregaCorrida varchar(5),
@enderecoComplementoEntregaCorrida varchar(5),
@cepEntregaCorrida numeric(8)
)
AS
BEGIN
UPDATE Corrida
SET
idMotoboy = @idMotoboy,
idFuncionario = @idFuncionario,
valorCorrida = @valorCorrida,
distanciaCorrida = @distanciaCorrida,
horarioRetiraCorrida = @horarioRetiraCorrida,
dataRetiraCorrida = @dataRetiraCorrida,
cidadeRetiradaCorrida = @cidadeRetiradaCorrida,
enderecoRetiradaCorrida=@enderecoRetiradaCorrida,
enderecoNumeroRetiradaCorrida = @enderecoNumeroRetiradaCorrida,
enderecoComplementoRetiradaCorrida = @enderecoComplementoRetiradaCorrida,
cepRetiraCorrida = @cepRetiraCorrida,
horarioEntregaCorrida = @horarioEntregaCorrida,
dataEntregaCorrida = @dataEntregaCorrida,
cidadeEntregaCorrida = @cidadeEntregaCorrida,
enderecoEntregaCorrida = @enderecoEntregaCorrida,
enderecoNumeroEntregaCorrida = @enderecoNumeroEntregaCorrida,
enderecoComplementoEntregaCorrida = @enderecoComplementoEntregaCorrida,
cepEntregaCorrida = @cepEntregaCorrida
WHERE idCorrida  = @idCorrida
END


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

INSERIR FUNCIONARIO

create procedure pi_Funcionario
(
@nomeFuncionario varchar(100),
@cpfFuncionario char(11),
@idadeFuncionario date,
@emailFuncionario varchar(100),
@cidadeFuncionario varchar(40),
@enderecoFuncionario varchar(50),
@enderecoNumeroFuncionario varchar(50),
@enderecoComplementoFuncionario varchar(10),
@telefoneFuncionario numeric(10),
@celularFuncionario numeric(11),
@loginFuncionario varchar(50),
@ativoInativoFuncionario varchar(7),
@senhaFuncionario varchar(500)
)
as
insert into Funcionario (nomeFuncionario, cpfFuncionario, idadeFuncionario, emailFuncionario, cidadeFuncionario, enderecoFuncionario, enderecoNumeroFuncionario, enderecoComplementoFuncionario, telefoneFuncionario, celularFuncionario, loginFuncionario, ativoInativoFuncionario, senhaFuncionario)
values(@nomeFuncionario, @cpfFuncionario, @idadeFuncionario, @emailFuncionario, @cidadeFuncionario, @enderecoFuncionario, @enderecoNumeroFuncionario, @enderecoComplementoFuncionario, @telefoneFuncionario, @celularFuncionario, @loginFuncionario, @ativoInativoFuncionario, @senhaFuncionario)




INSERIR CLIENTE

create procedure pi_Cliente
(
@nomeCliente varchar (100),
@cpfouCPNJCliente char (14),
@emailCliente varchar (100),
@cidadeCliente varchar (40),
@enderecoCliente varchar (50),
@enderecoNumeroCLiente varchar (12),
@enderecoComplementoCliente varchar (20),
@telefoneCliente numeric (10),
@celularCliente numeric (11),
@loginCliente varchar(50),
@senhaCliente varchar(500)
)
as
insert into Cliente (nomeCliente, cpfouCPNJCliente, emailCliente, cidadeCliente, enderecoCliente, enderecoNumeroCLiente, enderecoComplementoCliente, telefoneCliente, celularCliente, loginCliente, senhaCliente)
values (@nomeCliente, @cpfouCPNJCliente, @emailCliente, @cidadeCliente, @enderecoCliente, @enderecoNumeroCLiente, @enderecoComplementoCliente, @telefoneCliente, @celularCliente, @loginCliente, @senhaCliente )



INSERIR CLIENTE FORM

create procedure pi_ClienteForm
(
@nomeCliente varchar (100),
@cpfouCPNJCliente char (14),
@emailCliente varchar (100),
@cidadeCliente varchar (40),
@enderecoCliente varchar (50),
@enderecoNumeroCLiente varchar (12),
@enderecoComplementoCliente varchar (20),
@telefoneCliente numeric (10),
@celularCliente numeric (11),
@ativoInativoCliente varchar(7),
@loginCliente varchar(50),
@senhaCliente varchar(500)
)
as
insert into Cliente (nomeCliente, cpfouCPNJCliente, emailCliente, cidadeCliente, enderecoCliente, enderecoNumeroCLiente, enderecoComplementoCliente, telefoneCliente, celularCliente, ativoInativoCliente, loginCliente, senhaCliente)
values (@nomeCliente, @cpfouCPNJCliente, @emailCliente, @cidadeCliente, @enderecoCliente, @enderecoNumeroCLiente, @enderecoComplementoCliente, @telefoneCliente, @celularCliente, @ativoInativoCliente, @loginCliente, @senhaCliente )




INSERIR MOTOBOY


CREATE PROCEDURE pi_Motoboy
(
@cnhMotoboy char(11),
@nomeMotoboy varchar(100),
@idadeMotoboy date,
@veiculoMotoboy varchar(50),
@modeloMotoboy varchar(50),
@placaMotoboy char(7),
@enderecoMotoboy varchar(50),
@enderecoNumeroMotoboy varchar(5),
@EnderecoComplementoMotoboy varchar(5),
@celularMotoboy numeric(13),
@ativoInativoMotoboy varchar(7)
)
as
insert into Motoboy (cnhMotoboy, nomeMotoboy, idadeMotoboy, veiculoMotoboy, modeloMotoboy , placaMotoboy, enderecoMotoboy, enderecoNumeroMotoboy, EnderecoComplementoMotoboy, celularMotoboy, ativoInativoMotoboy)
values (@cnhMotoboy, @nomeMotoboy, @idadeMotoboy, @veiculoMotoboy, @modeloMotoboy , @placaMotoboy, @enderecoMotoboy, @enderecoNumeroMotoboy, @EnderecoComplementoMotoboy, @celularMotoboy, @ativoInativoMotoboy)



INSERIR CORRIDA

CREATE PROCEDURE pi_Corrida
(
@idCliente int,
@valorCorrida varchar(10),
@distanciaCorrida varchar(10),
@horarioRetiraCorrida time,
@dataRetiraCorrida date,
@cidadeRetiradaCorrida varchar(40),
@enderecoRetiradaCorrida varchar(50),
@enderecoNumeroRetiradaCorrida varchar(5),
@enderecoComplementoRetiradaCorrida varchar(5),
@cepRetiraCorrida numeric(8),
@horarioEntregaCorrida time,
@dataEntregaCorrida date,
@cidadeEntregaCorrida varchar(40),
@enderecoEntregaCorrida varchar(50),
@enderecoNumeroEntregaCorrida varchar(5),
@enderecoComplementoEntregaCorrida varchar(5),
@cepEntregaCorrida numeric(8)
)
as
insert into Corrida (idCliente, valorCorrida, distanciaCorrida, horarioRetiraCorrida, dataRetiraCorrida, cidadeRetiradaCorrida, enderecoRetiradaCorrida, enderecoNumeroRetiradaCorrida, enderecoComplementoRetiradaCorrida, cepRetiraCorrida, horarioEntregaCorrida, dataEntregaCorrida, cidadeEntregaCorrida, enderecoEntregaCorrida, enderecoNumeroEntregaCorrida, enderecoComplementoEntregaCorrida, cepEntregaCorrida)
values (@idCliente, @valorCorrida, @distanciaCorrida ,@horarioRetiraCorrida, @dataRetiraCorrida, @cidadeRetiradaCorrida, @enderecoRetiradaCorrida, @enderecoNumeroRetiradaCorrida, @enderecoComplementoRetiradaCorrida, @cepRetiraCorrida, @horarioEntregaCorrida, @dataEntregaCorrida, @cidadeEntregaCorrida, @enderecoEntregaCorrida, @enderecoNumeroEntregaCorrida, @enderecoComplementoEntregaCorrida, @cepEntregaCorrida)


INSERIR CORRIDA FORM


INSERIR CORRIDA

CREATE PROCEDURE pi_CorridaForm
(
@idMotoboy int,
@idCliente int,
@idFuncionario int,
@valorCorrida varchar(10),
@distanciaCorrida varchar(10),
@horarioRetiraCorrida time,
@dataRetiraCorrida date,
@cidadeRetiradaCorrida varchar(40),
@enderecoRetiradaCorrida varchar(50),
@enderecoNumeroRetiradaCorrida varchar(5),
@enderecoComplementoRetiradaCorrida varchar(5),
@cepRetiraCorrida numeric(8),
@horarioEntregaCorrida time,
@dataEntregaCorrida date,
@cidadeEntregaCorrida varchar(40),
@enderecoEntregaCorrida varchar(50),
@enderecoNumeroEntregaCorrida varchar(5),
@enderecoComplementoEntregaCorrida varchar(5),
@cepEntregaCorrida numeric(8)
)
as
insert into Corrida (idMotoboy, idCliente, idFuncionario, valorCorrida, distanciaCorrida, horarioRetiraCorrida, dataRetiraCorrida, cidadeRetiradaCorrida, enderecoRetiradaCorrida, enderecoNumeroRetiradaCorrida, enderecoComplementoRetiradaCorrida, cepRetiraCorrida, horarioEntregaCorrida, dataEntregaCorrida, cidadeEntregaCorrida, enderecoEntregaCorrida, enderecoNumeroEntregaCorrida, enderecoComplementoEntregaCorrida, cepEntregaCorrida)
values (@idMotoboy, @idCliente, @idFuncionario, @valorCorrida, @distanciaCorrida, @horarioRetiraCorrida, @dataRetiraCorrida, @cidadeRetiradaCorrida, @enderecoRetiradaCorrida, @enderecoNumeroRetiradaCorrida, @enderecoComplementoRetiradaCorrida, @cepRetiraCorrida, @horarioEntregaCorrida, @dataEntregaCorrida, @cidadeEntregaCorrida, @enderecoEntregaCorrida, @enderecoNumeroEntregaCorrida, @enderecoComplementoEntregaCorrida, @cepEntregaCorrida)




BUSCAR CORRIDA

CREATE PROCEDURE ps_Corrida
(
	@IdBuscar int(1,1)
	
)
AS
BEGIN
	
		SELECT * FROM Corrida WHERE idCorrida = @IdBuscar
	
END


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

LOGIN FUNCIONARIO

Create procedure PS_Login	
(
@loginFuncionario   Varchar(50),
@senhaFuncionario  varchar(500)
)
as
begin
  select * from Funcionario
  where loginFuncionario = @loginFuncionario and senhaFuncionario = @senhaFuncionario
end

LOGIN CLIENTE

Create procedure ps_loginCliente
(
@loginCliente varchar(50),
@senhaCliente varchar(500)
)
as
begin
  select * from Cliente
  where loginCliente = @loginCliente and senhaCliente = @senhaCliente
end

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

BUSCA RELATORIO


CREATE PROCEDURE ps_Relatorio
(
	@dataPeriodoInicial DATE,
	@dataPeriodoFinal DATE,
	@nomeCliente varchar(100),
	@nomeMotoboy varchar(100),
	@nomeFuncionario varchar(100)
)
AS
BEGIN
	IF (@nomeCliente = '' AND @nomeMotoboy = '' AND @nomeFuncionario = '' AND @dataPeriodoInicial = '' AND @dataPeriodoFinal = '')
	BEGIN
		select idCorrida as PEDIDO, dataRetiraCorrida as 'Data', valorCorrida as VALOR, distanciaCorrida as DISTANCIA, horarioRetiraCorrida as 'COLETAR Remetente', cidadeRetiradaCorrida as 'CIDADE Remetente', enderecoRetiradaCorrida as 'RUA Remetente', enderecoNumeroEntregaCorrida as 'NUM Remetente', cepRetiraCorrida as 'CEP Remetente', horarioEntregaCorrida as 'ENTREGAR Destino', cidadeEntregaCorrida as 'CIDADE Destino', enderecoEntregaCorrida as 'RUA Destino', enderecoNumeroEntregaCorrida as 'NUM Destino', cepEntregaCorrida as 'CEP Destino', nomeMotoboy, nomeCliente, cpfouCPNJCliente, celularCliente, nomeFuncionario from Corrida inner join Cliente on Cliente.idCliente = corrida.idCliente inner join Motoboy on Motoboy.idMotoboy = corrida.idMotoboy inner join Funcionario on Funcionario.IdFuncionario = corrida.idFuncionario
	END
	ELSE IF (@nomeCliente = '' AND @nomeMotoboy = '' AND @nomeFuncionario = '')
	BEGIN
		select idCorrida as PEDIDO, dataRetiraCorrida as 'Data', valorCorrida as VALOR, distanciaCorrida as DISTANCIA, horarioRetiraCorrida as 'COLETAR Remetente', cidadeRetiradaCorrida as 'CIDADE Remetente', enderecoRetiradaCorrida as 'RUA Remetente', enderecoNumeroEntregaCorrida as 'NUM Remetente', cepRetiraCorrida as 'CEP Remetente', horarioEntregaCorrida as 'ENTREGAR Destino', cidadeEntregaCorrida as 'CIDADE Destino', enderecoEntregaCorrida as 'RUA Destino', enderecoNumeroEntregaCorrida as 'NUM Destino', cepEntregaCorrida as 'CEP Destino', nomeMotoboy, nomeCliente, cpfouCPNJCliente, celularCliente, nomeFuncionario from Corrida inner join Cliente on Cliente.idCliente = corrida.idCliente inner join Motoboy on Motoboy.idMotoboy = corrida.idMotoboy inner join Funcionario on Funcionario.IdFuncionario = corrida.idFuncionario where dataRetiraCorrida BETWEEN @dataPeriodoInicial AND @dataPeriodoFinal
	END
	ELSE IF (@nomeMotoboy = '' AND @nomeFuncionario = '')
	BEGIN
		select idCorrida as PEDIDO, dataRetiraCorrida as 'Data', valorCorrida as VALOR, distanciaCorrida as DISTANCIA, horarioRetiraCorrida as 'COLETAR Remetente', cidadeRetiradaCorrida as 'CIDADE Remetente', enderecoRetiradaCorrida as 'RUA Remetente', enderecoNumeroEntregaCorrida as 'NUM Remetente', cepRetiraCorrida as 'CEP Remetente', horarioEntregaCorrida as 'ENTREGAR Destino', cidadeEntregaCorrida as 'CIDADE Destino', enderecoEntregaCorrida as 'RUA Destino', enderecoNumeroEntregaCorrida as 'NUM Destino', cepEntregaCorrida as 'CEP Destino', nomeCliente, cpfouCPNJCliente, celularCliente from Corrida inner join Cliente on Cliente.idCliente = corrida.idCliente where dataRetiraCorrida BETWEEN @dataPeriodoInicial AND @dataPeriodoFinal AND nomeCliente LIKE @nomeCliente + '%'
	END
	ELSE IF (@nomeCliente = '' AND @nomeFuncionario = '')
	BEGIN
				select idCorrida as PEDIDO, dataRetiraCorrida as 'Data', valorCorrida as VALOR, distanciaCorrida as DISTANCIA, horarioRetiraCorrida as 'COLETAR Remetente', cidadeRetiradaCorrida as 'CIDADE Remetente', enderecoRetiradaCorrida as 'RUA Remetente', enderecoNumeroEntregaCorrida as 'NUM Remetente', cepRetiraCorrida as 'CEP Remetente', horarioEntregaCorrida as 'ENTREGAR Destino', cidadeEntregaCorrida as 'CIDADE Destino', enderecoEntregaCorrida as 'RUA Destino', enderecoNumeroEntregaCorrida as 'NUM Destino', cepEntregaCorrida as 'CEP Destino', nomeMotoboy from Corrida inner join Motoboy on Motoboy.idMotoboy = corrida.idMotoboy where dataRetiraCorrida BETWEEN @dataPeriodoInicial AND @dataPeriodoFinal AND nomeMotoboy LIKE @nomeMotoboy + '%'
	END
	ELSE IF (@nomeCliente = '' AND @nomeMotoboy = '')
	BEGIN
				select idCorrida as PEDIDO, dataRetiraCorrida as 'Data', valorCorrida as VALOR, distanciaCorrida as DISTANCIA, horarioRetiraCorrida as 'COLETAR Remetente', cidadeRetiradaCorrida as 'CIDADE Remetente', enderecoRetiradaCorrida as 'RUA Remetente', enderecoNumeroEntregaCorrida as 'NUM Remetente', cepRetiraCorrida as 'CEP Remetente', horarioEntregaCorrida as 'ENTREGAR Destino', cidadeEntregaCorrida as 'CIDADE Destino', enderecoEntregaCorrida as 'RUA Destino', enderecoNumeroEntregaCorrida as 'NUM Destino', cepEntregaCorrida as 'CEP Destino', nomeFuncionario from Corrida inner join Funcionario on Funcionario.IdFuncionario = corrida.idFuncionario where dataRetiraCorrida BETWEEN @dataPeriodoInicial AND @dataPeriodoFinal AND nomeFuncionario LIKE @nomeFuncionario + '%'
	END
	ELSE IF (@nomeCliente = '')
	BEGIN
				select idCorrida as PEDIDO, dataRetiraCorrida as 'Data', valorCorrida as VALOR, distanciaCorrida as DISTANCIA, horarioRetiraCorrida as 'COLETAR Remetente', cidadeRetiradaCorrida as 'CIDADE Remetente', enderecoRetiradaCorrida as 'RUA Remetente', enderecoNumeroEntregaCorrida as 'NUM Remetente', cepRetiraCorrida as 'CEP Remetente', horarioEntregaCorrida as 'ENTREGAR Destino', cidadeEntregaCorrida as 'CIDADE Destino', enderecoEntregaCorrida as 'RUA Destino', enderecoNumeroEntregaCorrida as 'NUM Destino', cepEntregaCorrida as 'CEP Destino', nomeMotoboy, nomeFuncionario from Corrida inner join Motoboy on Motoboy.idMotoboy = corrida.idMotoboy inner join Funcionario on Funcionario.IdFuncionario = corrida.idFuncionario where dataRetiraCorrida BETWEEN @dataPeriodoInicial AND @dataPeriodoFinal AND nomeFuncionario LIKE @nomeFuncionario + '%' AND nomeMotoboy LIKE @nomeMotoboy + '%'
	END
	ELSE IF (@nomeMotoboy = '')
	BEGIN
				select idCorrida as PEDIDO, dataRetiraCorrida as 'Data', valorCorrida as VALOR, distanciaCorrida as DISTANCIA, horarioRetiraCorrida as 'COLETAR Remetente', cidadeRetiradaCorrida as 'CIDADE Remetente', enderecoRetiradaCorrida as 'RUA Remetente', enderecoNumeroEntregaCorrida as 'NUM Remetente', cepRetiraCorrida as 'CEP Remetente', horarioEntregaCorrida as 'ENTREGAR Destino', cidadeEntregaCorrida as 'CIDADE Destino', enderecoEntregaCorrida as 'RUA Destino', enderecoNumeroEntregaCorrida as 'NUM Destino', cepEntregaCorrida as 'CEP Destino', nomeCliente, cpfouCPNJCliente, celularCliente, nomeFuncionario from Corrida inner join Cliente on Cliente.idCliente = corrida.idCliente inner join Funcionario on Funcionario.IdFuncionario = corrida.idFuncionario where dataRetiraCorrida BETWEEN @dataPeriodoInicial AND @dataPeriodoFinal AND nomeFuncionario LIKE @nomeFuncionario + '%' AND nomeCliente LIKE @nomeCliente + '%'
	END
	ELSE IF (@nomeFuncionario = '')
	BEGIN
				select idCorrida as PEDIDO, dataRetiraCorrida as 'Data', valorCorrida as VALOR, distanciaCorrida as DISTANCIA, horarioRetiraCorrida as 'COLETAR Remetente', cidadeRetiradaCorrida as 'CIDADE Remetente', enderecoRetiradaCorrida as 'RUA Remetente', enderecoNumeroEntregaCorrida as 'NUM Remetente', cepRetiraCorrida as 'CEP Remetente', horarioEntregaCorrida as 'ENTREGAR Destino', cidadeEntregaCorrida as 'CIDADE Destino', enderecoEntregaCorrida as 'RUA Destino', enderecoNumeroEntregaCorrida as 'NUM Destino', cepEntregaCorrida as 'CEP Destino', nomeCliente, cpfouCPNJCliente, celularCliente, nomeMotoboy from Corrida inner join Cliente on Cliente.idCliente = corrida.idCliente inner join Motoboy on Motoboy.idMotoboy = corrida.idMotoboy where dataRetiraCorrida BETWEEN @dataPeriodoInicial AND @dataPeriodoFinal AND nomeMotoboy LIKE @nomeMotoboy + '%' AND nomeCliente LIKE @nomeCliente + '%'
	END
END